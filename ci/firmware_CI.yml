# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

resources:
  pipelines:
  - pipeline: custom-lib-ci   # Name of the pipeline resource
    source: custom-lib-ci # Name of the pipeline referenced by the pipeline resource
    project: Pipiline_example # Required only if the source pipeline is in another project
    trigger: true # Run firmware-ci pipeline when any run of custom-lib-ci completes
  
pool: MyLocalPool

container:
  image: myworkregistry007.azurecr.io/build_repo:latest
  endpoint: myWorkRegistry007
  options: -v /dev:/dev --privileged

steps:

- script: ls
  workingDirectory: '$(Build.SourcesDirectory)/'
  displayName: 'make dir'

- checkout: self
- script: rm -r ~/Arduino/micro-ecc
  workingDirectory: '$(Build.SourcesDirectory)/'
  displayName: 'checkout'
- task: UniversalPackages@0
  displayName: 'Downloading the artifacts'
  inputs:
    command: 'download'
    downloadDirectory: '$(Build.SourcesDirectory)/custom_library'
    vstsFeed: 'Pipiline_example/myFeeds'
    vstsFeedPackage: 'custom_library'
    vstsPackageVersion: '0.0.8'

- script: cp -r custom_library ~/Arduino/libraries
  workingDirectory: '$(Build.SourcesDirectory)/'
  displayName: 'custom library checkout'

- script: ./build-arduino.sh
  workingDirectory: '$(Build.SourcesDirectory)/ci'
  displayName: 'Moteino m0 build'
    
- task: UniversalPackages@0
  inputs:
    command: 'publish'
    publishDirectory: './firmware/build'
    feedsToUsePublish: 'internal'
    vstsFeedPublish: 'c7e54f94-5edf-4148-8307-6fc152f42f8b/50aafe39-34db-4153-93fa-13522ecb0c89'
    vstsFeedPackagePublish: 'ecdsa'
    versionOption: 'patch'
